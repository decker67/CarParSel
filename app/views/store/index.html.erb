<h1>Artikel
  <small>lagern</small>
</h1>

<div id="message">-</div>
<audio id="scan-sound" src="/assets/scan.mp3"></audio>

<!-- scanner image -->
<div id="interactive" class="viewport"></div>

<%= link_to 'Abbrechen', {controller: 'mobile', action: 'overview'}, class: 'btn btn-lg btn-info btn-block', role: 'button' %>

<div id="log"></div>


<script type="text/javascript">

    try {

        (function () {

            var audioNode = document.getElementById("scan-sound");
            var messageNode = document.getElementById('message');
            var lastCodeAsText;
            var storageId;
            var partId;

            function handleResult(codeAsText) {
                //S#nnn or P#nnn
                if (lastCodeAsText === codeAsText) {
                    return;
                }
                lastCodeAsText = codeAsText
                var type = codeAsText[0];
                var id = codeAsText.substr(2);
                if (type === 'S') {
                    storageId = id;
                    partId = undefined;
                    playSound();
                } else if (type === 'P') {
                    partId = id;
                    playSound();
                }

                if (storageId && partId) {
                    storePart(storageId, partId);
                    playSound();
                    playSound();
                }
            }

            function playSound() {
                audioNode.play();
            }

            function storePart(storageId, partId) {
                var requestForStore = '/store_part';
                var data = {storage: storageId, part: partId};
                $.post(requestForStore, data).done(function (result) {
                    messageNode.innerHTML =
                            result.car_part + ' wird gelagert in ' + result.storage;
                });
            }

            var App = {

                config: {
                    inputStream: {
                        type: "LiveStream",
                        constraints: {
                            width: 640,
                            height: 480,
                            facing: "environment" // or user
                        }
                    },
                    locator: {
                        patchSize: "medium",
                        halfSample: true
                    },
                    numOfWorkers: 4,
                    decoder: {
                        readers: ["code_128_reader"]
                    },
                    locate: true
                },

                init: function () {
                    var self = this;

                    Quagga.init(this.config, function (error) {
                        if (error) {
                            throw new Error(error);
                        }
                        Quagga.start();
                        //Quagga.stop();
                    });
                },

                lastResult: null
            };

            App.init();

            Quagga.onDetected(function (result) {
                var code = result.codeResult.code;
                //log(code);
                handleResult(code);
            });

        }());

    }
    catch (exception) {
        log('Error:' + exception.stack);
    }

    function log(value) {
        var errorNode = document.getElementById('log');
        var textNode = document.createTextNode(value);
        errorNode.appendChild(textNode);
    }
</script>





